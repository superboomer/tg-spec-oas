{
    "openapi": "3.1.0",
    "info": {
        "title": "Telegram Gateway API",
        "description": "The Gateway API is an HTTP-based interface for phone number verification and related operations. See https://core.telegram.org/gateway/api for details.",
        "version": "February 26, 2025"
    },
    "servers": [
        {
            "url": "https://gatewayapi.telegram.org/",
            "description": "Telegram Gateway API server",
            "variables": {}
        }
    ],
    "paths": {
        "/checkSendAbility": {
            "post": {
                "summary": "checkSendAbility",
                "description": "Use this method to optionally check the ability to send a verification message to the specified phone number. If the ability to send is confirmed, a fee will apply according to the pricing plan. After checking, you can send a verification message using the sendVerificationMessage method, providing the request_id from this response. Within the scope of a request_id, only one fee can be charged. Calling sendVerificationMessage once with the returned request_id will be free of charge, while repeated calls will result in an error. Conversely, calls that don't include a request_id will spawn new requests and incur the respective fees accordingly. Note that this method is always free of charge when used to send codes to your own phone number.In case the message can be sent, returns a RequestStatus object. Otherwise, an appropriate error will be returned. ",
                "operationId": "checkSendAbility",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phone_number": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "phone_number"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean",
                                            "description": "Request success indicator"
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/RequestStatus"
                                        }
                                    },
                                    "required": [
                                        "ok",
                                        "result"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/checkVerificationStatus": {
            "post": {
                "summary": "checkVerificationStatus",
                "description": "Use this method to check the status of a verification message that was sent previously. If the code was generated by Telegram for you, you can also verify the correctness of the code entered by the user using this method. Even if you set the code yourself, it is recommended to call this method after the user has successfully entered the code, passing the correct code in the code parameter, so that we can track the conversion rate of your verifications. On success, returns a RequestStatus object.",
                "operationId": "checkVerificationStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "request_id": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "request_id"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean",
                                            "description": "Request success indicator"
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/RequestStatus"
                                        }
                                    },
                                    "required": [
                                        "ok",
                                        "result"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/revokeVerificationMessage": {
            "post": {
                "summary": "revokeVerificationMessage",
                "description": "Use this method to revoke a verification message that was sent previously. Returns True if the revocation request was received. However, this does not guarantee that the message will be deleted. For example, if the message has already been delivered or read, it will not be removed.",
                "operationId": "revokeVerificationMessage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "request_id": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "request_id"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean",
                                            "description": "Request success indicator"
                                        },
                                        "result": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "ok",
                                        "result"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sendVerificationMessage": {
            "post": {
                "summary": "sendVerificationMessage",
                "description": "Use this method to send a verification message. Charges will apply according to the pricing plan for each successful message delivery. Note that this method is always free of charge when used to send codes to your own phone number. On success, returns a RequestStatus object.",
                "operationId": "sendVerificationMessage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "callback_url": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "code_length": {
                                        "type": "integer"
                                    },
                                    "payload": {
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "request_id": {
                                        "type": "string"
                                    },
                                    "sender_username": {
                                        "type": "string"
                                    },
                                    "ttl": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "phone_number"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean",
                                            "description": "Request success indicator"
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/RequestStatus"
                                        }
                                    },
                                    "required": [
                                        "ok",
                                        "result"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DeliveryStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The current status of the message. One of the following:- sent – the message has been sent to the recipient's device(s),- delivered – the message has been delivered to the recipient's device(s),- read – the message has been read by the recipient,- expired – the message has expired without being delivered or read,- revoked – the message has been revoked."
                    },
                    "updated_at": {
                        "type": "integer",
                        "description": "The timestamp when the status was last updated."
                    }
                },
                "description": "This object represents the delivery status of a message.\n"
            },
            "RequestStatus": {
                "type": "object",
                "properties": {
                    "delivery_status": {
                        "$ref": "#/components/schemas/DeliveryStatus",
                        "description": "Optional. The current message delivery status. Returned only if a verification message was sent to the user."
                    },
                    "is_refunded": {
                        "type": "boolean",
                        "description": "Optional. If True, the request fee was refunded."
                    },
                    "payload": {
                        "type": "string",
                        "description": "Optional. Custom payload if it was provided in the request, 0-256 bytes."
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "The phone number to which the verification code was sent, in the E.164 format."
                    },
                    "remaining_balance": {
                        "type": "number",
                        "description": "Optional. Remaining balance in credits. Returned only in response to a request that incurs a charge."
                    },
                    "request_cost": {
                        "type": "number",
                        "description": "Total request cost incurred by either checkSendAbility or sendVerificationMessage."
                    },
                    "request_id": {
                        "type": "string",
                        "description": "Unique identifier of the verification request."
                    },
                    "verification_status": {
                        "$ref": "#/components/schemas/VerificationStatus",
                        "description": "Optional. The current status of the verification process."
                    }
                },
                "description": "This object represents the status of a verification message request.\n"
            },
            "VerificationStatus": {
                "type": "object",
                "properties": {
                    "code_entered": {
                        "type": "string",
                        "description": "Optional. The code entered by the user."
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the verification process. One of the following:- code_valid – the code entered by the user is correct,- code_invalid – the code entered by the user is incorrect,- code_max_attempts_exceeded – the maximum number of attempts to enter the code has been exceeded,- expired – the code has expired and can no longer be used for verification."
                    },
                    "updated_at": {
                        "type": "integer",
                        "description": "The timestamp for this particular status. Represents the time when the status was last updated."
                    }
                },
                "description": "This object represents the verification status of a code.\n"
            }
        },
        "securitySchemes": {
            "access_token": {
                "type": "http",
                "description": "Access token obtained in the Telegram Gateway account settings.",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "access_token": []
        }
    ]
}